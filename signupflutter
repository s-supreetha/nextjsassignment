import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:hu_flutter/modules/demo_counter_module/screens/first_page.dart';
import 'package:hu_flutter/modules/demo_counter_module/screens/login_page.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'package:get/get.dart';

class ProfilePage extends StatefulWidget {
  ProfilePage({super.key});

  @override
  State<ProfilePage> createState() => _ProfilePageState();
}

class _ProfilePageState extends State<ProfilePage> {
  bool isChecked = false;
  bool showPassword = false;
  bool showConfPassword = false;
  var confpass;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: false,
      backgroundColor: Color(0xfff7f7f7),
      body: SingleChildScrollView(
        child: SafeArea(
            child: Column(children: [
          const SizedBox(height: 50),
          Align(
            alignment: Alignment(-0.8, 0.3),
            child: Text(
              "Profile",
              style: TextStyle(fontWeight: FontWeight.bold, fontSize: 30),
              // textAlign: TextAlign.left,
            ),
          ),
          Padding(
              padding: EdgeInsets.fromLTRB(0, 20, 0, 0),
              child: Image.asset('assets/profile_placeholder.png')),
          Text(
            'David',
            style: TextStyle(fontWeight: FontWeight.bold),
          ),
          Padding(
            padding: EdgeInsets.fromLTRB(30, 100, 30, 0),
            child: Container(
              width: double.infinity,
              child: Column(
                  mainAxisAlignment: MainAxisAlignment.spaceAround,
                  children: [
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 0, 0, 20),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Row(children: [
                                  Icon(FontAwesomeIcons.bell),
                                  Text(
                                    "  Notification",
                                    style: TextStyle(fontSize: 20),
                                  ),
                                ]),
                              ),
                              Icon(FontAwesomeIcons.angleRight)
                            ])),
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 20, 0, 20),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Row(children: [
                                  Icon(FontAwesomeIcons.lock),
                                  Text(
                                    "  Security & Privacy",
                                    style: TextStyle(fontSize: 20),
                                  ),
                                ]),
                              ),
                              Icon(FontAwesomeIcons.angleRight)
                            ])),
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 20, 0, 20),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Row(children: [
                                  Icon(FontAwesomeIcons.pen),
                                  Text(
                                    "  Terms & Conditions",
                                    style: TextStyle(fontSize: 20),
                                  ),
                                ]),
                              ),
                              Icon(FontAwesomeIcons.angleRight)
                            ])),
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 20, 0, 20),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Row(children: [
                                  Icon(FontAwesomeIcons.questionCircle),
                                  Text(
                                    "  Help",
                                    style: TextStyle(fontSize: 20),
                                  ),
                                ]),
                              ),
                              Icon(FontAwesomeIcons.angleRight)
                            ])),
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 20, 0, 20),
                        child: Row(
                            mainAxisAlignment: MainAxisAlignment.spaceBetween,
                            children: [
                              Container(
                                child: Row(children: [
                                  Icon(FontAwesomeIcons.commentDots),
                                  Text(
                                    "  FAQs",
                                    style: TextStyle(fontSize: 20),
                                  ),
                                ]),
                              ),
                              Icon(FontAwesomeIcons.angleRight)
                            ])),
                    Padding(
                        padding: EdgeInsets.fromLTRB(0, 20, 0, 20),
                        child: Container(
                            height: 50,
                            width: 400,
                            //padding: const EdgeInsets.fromLTRB(10, 0, 10, 0),
                            child: ElevatedButton(
                              child: const Text('Logout'),
                              onPressed: () async {
                                final SharedPreferences sharedPreferences =
                                    await SharedPreferences.getInstance();
                                sharedPreferences.remove('username');
                                Get.to(LoginPage());
                              },
                            )))
                  ]),
            ),
          ),
        ])),
      ),
    );
  }
}
